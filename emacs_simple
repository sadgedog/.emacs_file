(custom-set-variables
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(current-language-environment "Japanese")
 '(custom-enabled-themes '(wombat))
 '(custom-safe-themes
   '("5a611788d47c1deec31494eb2bb864fde402b32b139fe461312589a9f28835db" "dad622637530638a2140b83812e159a06b4791eb2f67ffd4abb4ff671b062d0b" "3b8284e207ff93dfc5e5ada8b7b00a3305351a3fb222782d8033a400a48eca48" default))
 )

(when (not window-system) (progn
    (load-theme 'modus-vivendi)
    (set-face-attribute 'highlight nil :foreground 'unspecified)
))

(add-to-list 'default-frame-alist
             '(font . "Cascadia Mono-14"))

(setq ring-bell-function 'ignore)

(defun eshell-clear-buffer ()
  "Clear terminal"
  (interactive)
  (let ((inhibit-read-only t))
    (erase-buffer)
    (eshell-send-input)))
(add-hook 'eshell-mode-hook
      '(lambda()
          (local-set-key (kbd "C-l") 'eshell-clear-buffer)))

(defun revert-buffer-no-confirm (&optional force-reverting)
  (interactive "P")
  (if (or force-reverting (not (buffer-modified-p)))
      (revert-buffer :ignore-auto :noconfirm)
    (error "The buffer has been modified")))

(global-set-key (kbd "M-r") 'revert-buffer-no-confirm)

(setq backup-inhibited t)

(defun move-line-down ()
  (interactive)
    (forward-line 5))

(defun move-line-up ()
    (interactive)
    (if (>= emacs-major-version 24)
    (forward-line -5)))          

(global-set-key (kbd "M-p") 'move-line-up)
(global-set-key (kbd "M-n") 'move-line-down)

(setq-default truncate-lines t)
(setq truncate-partial-width-windows t)

(setq auto-save-default nil)
(setq make-backup-files nil)
(setq auto-save-list-file-prefix nil)
(setq create-lockfiles nil)
